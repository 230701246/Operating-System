#include <stdio.h> 
#include <unistd.h> 
#include <sys/types.h> 
#include <sys/wait.h> 
int main() { 
    pid_t pid; 
    pid = fork(); 
    if (pid < 0) { 
        perror("Fork failed"); 
        return 1; 
    } 
    if (pid == 0) { 
        printf("THIS LINE EXECUTED TWICE\n"); 
        printf("Child Process ID: %d\n", getpid()); 
        printf("Parent Process ID: %d\n", getppid()); 
        execlp("/bin/ls", "ls", "-l", (char *)NULL); 
        perror("execlp failed"); 
        return 1; 
    } else { 
        printf("THIS LINE EXECUTED TWICE\n"); 
        printf("Parent Process ID: %d\n", getpid()); 
        printf("Parent's Parent Process ID: %d\n", getppid()); 
        wait(NULL); 
        printf("IT CAN BE EXECUTED TWICE\n"); 
    } 
    return 0; 
}